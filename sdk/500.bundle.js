"use strict";exports.id=500,exports.ids=[500],exports.modules={6500:(e,r,i)=>{i.r(r),i.d(r,{initializeRoomDirectory:()=>d,readFileContent:()=>a,walkDirectory:()=>c});var s=i(9896),t=i(6928),n=i(5317);const o=i(9023).promisify(n.exec),c=async(e,r)=>{if(await(async e=>{try{return await o("git rev-parse --is-inside-work-tree",{cwd:e}),!0}catch{return!1}})(e)){const i=await(async e=>{const{stdout:r}=await o("git ls-files",{cwd:e});return r.split("\n").filter((e=>e))})(e);for(const e of i)r(e)}else s.readdir(e,{withFileTypes:!0},(async(i,s)=>{for(const i of s){const s=t.join(e,i.name);i.isDirectory()?c(s,r):i.isFile()&&r(i.name)}}))},a=(e,r)=>s.readFileSync(t.join(e,r),"utf-8"),d=(e,r)=>{const i=process.env.HOME||process.env.USERPROFILE,n=t.join(i,"Rooms",e);return((e,r)=>{if(s.rmSync(e,{recursive:!0,force:!0}),0!==r.length)for(const i of r){const r=t.join(e,i);s.mkdirSync(t.dirname(r),{recursive:!0}),s.writeFileSync(r,"")}else s.mkdirSync(e,{recursive:!0})})(n,r),n}}};