;; -*- mode:lisp -*-

(in-package :lem-user)

(asdf:load-asd (probe-file "lem-rooms-client.asd"))
(ql:quickload :lem-rooms-client)

(defun parse-env (file)
  (let (env)
    (loop :for line :in (uiop:read-file-lines file)
          :do (let ((line (string-trim '(#\Space #\Tab #\Newline) line)))
                (let ((pos (position #\# line)))
                  (when pos
                    (setf line (subseq line 0 pos))))
                (cond ((zerop (length line)) nil)
                      ((search "=" line)
                       (destructuring-bind (key value)
                           (uiop:split-string line :separator '(#\=))
                         (push (cons key value) env))))))
    (nreverse env)))

(when (uiop:file-exists-p ".env")
  (loop :for (key . value) :in (parse-env ".env")
        :do (setf (uiop:getenv key) value)))

;(setf rooms-client/agent::*agent-path* "../editor-agent/index.js")
